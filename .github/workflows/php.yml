name: PHP Script Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cache_setup:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    #- name: Validate composer.json and composer.lock
    #  run: composer validate --strict
    - name: Restore Composer packages Cache
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-

    - name: Install dependencies
      if: steps.php-${{ hashFiles('**/composer.lock') }}.outputs.cache-hit != 'true'
      run: composer install --no-dev --prefer-dist --no-progress --no-suggest

  test:
    runs-on: ubuntu-latest
    needs: cache_setup
    strategy:
      matrix:
        include:
           - php: "7.2.34"
             jit: 0
           - php: "7.3"
             jit: 0
           - php: "7.4"
             jit: 0
           - php: "8.0.3"
             jit: 0
           - php: "8.0.3"
             jit: 1205

    steps:
    - uses: actions/checkout@v2
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
        tools: composer, phpunit:8.5.15
        ini-values: opcache.enable_cli=1, opcache.enable_cli=1, opcache.jit=${{ matrix.jit }}, opcache.jit_buffer_size=64M

    #- name: Validate composer.json and composer.lock
    #  run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          php-

    - name: Install dependencies
      if: steps.php-${{ hashFiles('**/composer.lock') }}.outputs.cache-hit != 'true'
      run: composer install --no-dev --prefer-dist --no-progress --no-suggest

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    - name: Run phpunit test
      run: phpunit
